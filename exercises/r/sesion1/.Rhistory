1+1
a <- 1
read.csv("train.csv")
titanic <- read.csv("train.csv")
View(titanic)
titanic[1,]
titanic[,1]
titanic[1,1]
titanic[,"Survivor"]
titanic[,"Survive"]
titanic[,"Survived"]
titanic[10,"Survived"]
titanic[c(1,5,10),"Survived"]
titanic[c(1,5,10),c("Survived","Name")]
titanic[c(2,4,6),c("Survived","Name")]
titanic[c(2,4,6),c("Survived","Name")] <- 0
titanic[c(2,4,6),c("Survived")] <- 0
titanic[c(2,4,6),"Survived"]
colnames(titanic)
colnames(titanic)[1]
rownames(titanic)
titanic$Age
titanic[,"Age"]
titanic$Age[1]
misColumnasFavoritas <- c("Age", "Survived")
titanic[,misColumnasFavoritas]
misColumnasFavoritas
min(titanic$Age)
min(titanic$Age, na.rm=TRUE)
max(titanic&Age, na.rm=TRUE)
max(titanic$Age, na.rm=TRUE)
mean(titanic$Age, na.rm=T)
891/3
titanic$Age <- c(5,1,3)
titanic$Age
summary(titanic$Age)
titanic <- read.csv("train.csv")
summary(titanic$Age)
titanic$Age < 18
titanic[titanic$Age,]
mascaraMenores <- titanic$Age < 18
titanic[mascaraMenores,]
is.na(mascaraMenores)
mascaraMenores[is.na(mascaraMenores)] <- FALSE
mascaraMenores
titanic[mascaraMenores,]
menores <- titanic[mascaraMenores,]
titanic[titanic$Age < 18 & !is.na(titanic$Age),]
library("dplyr")
titanic[Sex=="female" & Pclass==3,c("Survived","Fare")]
titanic[titanic$Sex=="female" & titanic$Pclass==3,c("Survived","Fare")]
#1
mujeres1 <- titanic[titanic$Sex=="female" & titanic$Pclass==3,c("Survived","Fare")]
#2
sum(mujeres1$Survived)
#2
sum(mujeres1$Survived)/len(mujeres1$Survived)
#2
sum(mujeres1$Survived)/length(mujeres1$Survived)
length(mujeres1$Survived)
#2
sum(mujeres1$Survived)/length(mujeres1$Survived)
#1
mujeres1 <- titanic[titanic$Sex=="female" & titanic$Pclass==3,c("Survived","Fare")]
#1
mujeres1 <- titanic[titanic$Sex=="female" & titanic$Pclass==1,c("Survived","Fare")]
#2 La mitad de mujeres de 1ª sobrevivió
sum(mujeres1$Survived)/length(mujeres1$Survived)
#Otra opción es la media (equivalente)
mean(mujeres1$Survived, na.rm=TRUE)
#Otra opción porque los dataframes no tienen longitud sino filas y columnas
sum(mujeres1$Survived)/nrow(mujeres1)
#Aplicar funciones sobre subgrupos del array para obtener varias tasas a la vez
tapply(titanic$Survived, titanic$Sex, mean)
tapply(titanic$Survived, titanic$Sex == "female" & titanic$Pclass==3, mean)
tapply(titanic$Survived, titanic$Pclass, mean)
#La funcion by nos permite aplicar sobre df en lugar de vector
by(titanic, titanic$Sex, summary)
aggregate(Survived~Sex, titanic, mean)
aggregate(Survived~Sex+Pclass, titanic, mean)
aggregate(cbin(Survived,Age)~Sex+Pclass, titanic, mean)
aggregate(cbind(Survived,Age)~Sex+Pclass, titanic, mean)
#Calculo de la varianza, covarianza, correlacion
cor(titanic$Survived, titanic$Age, use="comple")
cor(titanic[,c("Survived","Age")], use="comple")
install.packages("dplyr")
library(dplyr)
titanic %>%
filter(Sex == "female")
titanic %>%
group_by(Sex, Pclass) %>%
summarise(mean(Survived))
titanic %>%
group_by(Sex, Pclass) %>%
summarise(mean(Survived))
#1
titanic[titanic$Sex=="male",]
#1
titanic[titanic$Sex=="male",titanic$Age]
#1
titanic %>%
filter(Sex == "male" & Survived == 1)
titanic %>%
filter(Sex == "male" & Survived == 1) %>%
summarise(mean(Age))
titanic %>%
filter(Sex == "male" & Survived == 1)
titanic %>%
filter(Sex == "male" & Survived == 1 & !is.na(Age)) %>%
summarise(mean(Age))
titanic %>%
count(Survived)
#2
titanic %>%
count(Survived == 1)
titanic %>%
filter(Survived == 1) %>%
count()
titanic %>%
filter(Survived == 0) &>%
count()
titanic %>%
filter(Survived == 0) %>%
count()
titanic %>%
count()
titanic %>%
unique(PassengerId) %>%
count()
titanic %>%
unique(titanic,PassengerId) %>%
count()
titanic %>%
count()
titanic %>%
count(Pclass==1)/count(Pclass==3)
titanic %>%
count(Pclass==1)/count(Pclass==3)
#5
titanic %>%
count(Pclass==1)
titanic %>%
count(filter(Pclass==1))
titanic %>%
filter(Pclass==1)
titanic %>%
count(filter(Pclass==1))
#5
titanic$Pclass==1
#5
count(titanic$Pclass==1)
#5
length(titanic$Pclass==1)
#5
count(titanic[titanic$Pclass==1])
#5
lenght(titanic[titanic$Pclass==1])
#5
size(titanic[titanic$Pclass==1])
titanic %>%
filter(Sex == "male" & Survived == 1 & !is.na(Age)) %>%
summarise(mean(Age))
sum(titanic$Survived)
#3 Más simple
sum(!titanic$Survived)
#4 Más simple
nrow(titanic)
#5
titanic[titanic$Pclass==1]
#5
titanic[titanic$Pclass==1]
#5
titanic[Pclass==1]
#5
titanic[titanic$Pclass==1]
#5
titanic[titanic$Pclass==1]
#5
titanic[titanic$Pclass==1,]
#5
nrow(titanic[titanic$Pclass==1,])
#5
nrow(titanic[titanic$Pclass==3,])
#5
nrow(titanic[titanic$Pclass==1,])/nrow(titanic[titanic$Pclass==3,])
#6
titanic[titanic$Pclass==1,c("Age","Sex")]
titanic %>%
select(c("Age","Sex"))
titanic %>%
select(c("Age","Sex")) %>%
filter(Pclass==1)
titanic %>%
filter(Pclass == 1) %>%
select(c("Age","Sex"))
#4 Lo correcto
sum(titanic$Embarked != "")
#4 Más simple (pero no, tiene trampa)
nrow(titanic)
sum(titanic$Pclass ==1) / sum(titanic$Pclass == 3)
nrow(titanic[titanic$Pclass==1,])/nrow(titanic[titanic$Pclass==3,])
#7
titanic[(titanic$Pclass==3 & titanic$Survived) | (titanic$Pclass==1 & !titanic$Survived),]
#7
(titanic$Pclass==3 & titanic$Survived) | (titanic$Pclass==1 & !titanic$Survived)
#7
mascaraSup3NoSup1=(titanic$Pclass==3 & titanic$Survived) | (titanic$Pclass==1 & !titanic$Survived)
titanic[mascaraSup3NoSup1,]
#7
mascaraSup3NoSup1=(titanic$Pclass==3 & titanic$Survived) |
(titanic$Pclass==1 & titanic$Sex=='male' & !titanic$Survived)
titanic[mascaraSup3NoSup1,]
View(titanic[mascaraSup3NoSup1,])
